# https://www.youtube.com/watch?v=xjMP0hspNLE&list=PL-51WBLyFTg1gPEHotYAhNAPsisChkyTc
from django.http import JsonResponse
from rest_framework.response import Response
from rest_framework.decorators import api_view, permission_classes
from rest_framework.permissions import IsAuthenticated

from rest_framework_simplejwt.serializers import TokenObtainPairSerializer
from rest_framework_simplejwt.views import TokenObtainPairView


"""
customize the claims contained in web tokens which are generated by the TokenObtainPairView and TokenObtainSlidingView views, create a subclass for the desired view as well as a subclass for its corresponding serializer.
https://django-rest-framework-simplejwt.readthedocs.io/en/latest/customizing_token_claims.html
"""
class CustomTokenObtainPairSerializer(TokenObtainPairSerializer):
    @classmethod
    def get_token(cls, user):
        token = super().get_token(user)

        # Add custom claims
        token['username'] = user.username

        return token
    
class CustomTokenObtainPairView(TokenObtainPairView):
    serializer_class = CustomTokenObtainPairSerializer

# This is kind of documentation for application 
@api_view(['GET'])
def get_routes(request):
    routes = [
        '/api/token/', # retrieve refresh and access token
        '/api/token/refresh/', # Refreshing the token
        '/api/protected/', # Protected API endpoint
    ]
    return Response(routes)

@api_view(["GET"])
@permission_classes([IsAuthenticated])
def protected_route(request):
    return Response({"Detail": "You have access to this!"})